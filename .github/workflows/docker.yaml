name: Build and publish docker image on new tag creation
on:
  push:
    tags:
      - release.*
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Label of the build job
  build:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-22.04
    # Docker Hub image that `container-job` executes in
    container: node:20.10
    steps:
      - name: install node v18
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 20
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm install
      - name: setup
        run: npm run setup
      - name: tsc
        run: npm run build
      - name: Upload dist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            packages/additionalapi/dist/
            packages/bulkapi/dist/
            packages/common/dist/
            packages/inspection/dist/
            packages/languages/dist/
            packages/server/dist/
          if-no-files-found: error
          overwrite: true
      - name: Upload node modules
        uses: actions/upload-artifact@v4
        with:
          name: node_modules
          path: |
            node_modules
          if-no-files-found: error
          overwrite: true
  #          retention-days: 1
  docker:
    needs: build
    runs-on: ubuntu-latest
    #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: packages
          merge-multiple: true

      - name: Download node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules
          path: node_modules
          merge-multiple: true

      - name: Log into the Container registry
        uses: docker/login-action@v3.1.0
        with:
          
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for the Docker image
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        #      - name: Dump GitHub context
        #        env:
        #          GITHUB_CONTEXT: ${{ toJson(github) }}
        #        run: echo "$GITHUB_CONTEXT"

      - name: Build and push the Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          #          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
