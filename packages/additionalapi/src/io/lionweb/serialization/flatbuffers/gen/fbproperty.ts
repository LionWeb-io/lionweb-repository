// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { FBMetaPointer } from '../../../../../io/lionweb/serialization/flatbuffers/gen/fbmeta-pointer.js';


export class FBProperty {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBProperty {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFBProperty(bb:flatbuffers.ByteBuffer, obj?:FBProperty):FBProperty {
  return (obj || new FBProperty()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFBProperty(bb:flatbuffers.ByteBuffer, obj?:FBProperty):FBProperty {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FBProperty()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

metaPointer(obj?:FBMetaPointer):FBMetaPointer|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new FBMetaPointer()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

value():string|null
value(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
value(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startFBProperty(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addMetaPointer(builder:flatbuffers.Builder, metaPointerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, metaPointerOffset, 0);
}

static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, valueOffset, 0);
}

static endFBProperty(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFBProperty(builder:flatbuffers.Builder, metaPointerOffset:flatbuffers.Offset, valueOffset:flatbuffers.Offset):flatbuffers.Offset {
  FBProperty.startFBProperty(builder);
  FBProperty.addMetaPointer(builder, metaPointerOffset);
  FBProperty.addValue(builder, valueOffset);
  return FBProperty.endFBProperty(builder);
}
}
