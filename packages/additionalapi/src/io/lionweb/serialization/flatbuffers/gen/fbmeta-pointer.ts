// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class FBMetaPointer {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):FBMetaPointer {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsFBMetaPointer(bb:flatbuffers.ByteBuffer, obj?:FBMetaPointer):FBMetaPointer {
  return (obj || new FBMetaPointer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsFBMetaPointer(bb:flatbuffers.ByteBuffer, obj?:FBMetaPointer):FBMetaPointer {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FBMetaPointer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

language():string|null
language(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
language(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

key():string|null
key(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
key(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

version():string|null
version(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
version(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startFBMetaPointer(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addLanguage(builder:flatbuffers.Builder, languageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, languageOffset, 0);
}

static addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, keyOffset, 0);
}

static addVersion(builder:flatbuffers.Builder, versionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, versionOffset, 0);
}

static endFBMetaPointer(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createFBMetaPointer(builder:flatbuffers.Builder, languageOffset:flatbuffers.Offset, keyOffset:flatbuffers.Offset, versionOffset:flatbuffers.Offset):flatbuffers.Offset {
  FBMetaPointer.startFBMetaPointer(builder);
  FBMetaPointer.addLanguage(builder, languageOffset);
  FBMetaPointer.addKey(builder, keyOffset);
  FBMetaPointer.addVersion(builder, versionOffset);
  return FBMetaPointer.endFBMetaPointer(builder);
}
}
